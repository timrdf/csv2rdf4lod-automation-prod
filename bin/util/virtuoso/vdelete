#!/bin/bash
#
# Virtuoso			Graph Delete Script for Virtuoso OSE
#
# Author: Shangguan (http://www.cs.rpi.edu/~shangz, shangz@cs.rpi.edu)
# Contributor: Tim Lebo (http://tw.rpi.edu/instances/TimLebo)
# Version: 1.1
# Date: May 27, 2011
# Description: Bash script to delte a named graph in Virtuoso
# Usage: vdelete [graph_uri]

if [[ $# -lt 1 || $# -gt 2 ]]; then
	echo "usage: `basename $0` <graph_uri> [-v | --verbose]"
   exit 1
fi

graph_uri=$1

# Status message
echo "Deleting triples from graph <$graph_uri> ..."

# Log into Virtuoso isql env
# PORT and PASSWORD (see http://docs.openlinksw.com/virtuoso/isql.html)
virtuoso_home=${CSV2RDF4LOD_PUBLISH_VIRTUOSO_HOME:-"/opt/virtuoso"}

isql=${CSV2RDF4LOD_PUBLISH_VIRTUOSO_ISQL_PATH:-"$virtuoso_home/bin/isql"}
if [ ! -e "$isql" ]; then
   isql=${CSV2RDF4LOD_PUBLISH_VIRTUOSO_ISQL_PATH:-"$virtuoso_home/bin/isql-v"}
fi
if [[ -n "$isql" && ! -e "$isql" && -e "`which isql-v &> /dev/null`" ]]; then # Debian installs to /usr/bin/isql-v
   isql=`which isql-v`
fi
if [ ! -e "$isql" ]; then
   echo "[ERROR] $isql not found. Cannot delete triples."
   exit 1
fi 
isql_cmd="$isql ${CSV2RDF4LOD_PUBLISH_VIRTUOSO_PORT:-"1111"} ${CSV2RDF4LOD_PUBLISH_VIRTUOSO_USERNAME:-"dba"}"
isql_pass="${CSV2RDF4LOD_PUBLISH_VIRTUOSO_PASSWORD:-"dba"}"  # default admin password, may neeed to change

virtuoso_allowed_dir=${CSV2RDF4LOD_HOME}/tmp/vdelete-tmp
if [[ -e ${CSV2RDF4LOD_HOME:-'does-not-exist-3T63J'} ]]; then
   conversion_root=`cd ${CSV2RDF4LOD_CONVERT_DATA_ROOT} &> /dev/null; cr-conversion-root.sh --quiet`
   if [[ ${#conversion_root} -eq 0 && -e ${CSV2RDF4LOD_CONVERT_DATA_ROOT}/source ]]; then
      conversion_root=${CSV2RDF4LOD_CONVERT_DATA_ROOT}/source
   fi
   if [[ ${#conversion_root}                   -gt 0 && \
         ${#CSV2RDF4LOD_PUBLISH_OUR_SOURCE_ID} -gt 0 ]]; then
      me="cr-`basename $0`"
      versionID=`md5.sh $0`
      virtuoso_allowed_dir="$conversion_root/$CSV2RDF4LOD_PUBLISH_OUR_SOURCE_ID/$me/version/$versionID/doc/logs"
   else
      warn='[WARNING]: could not log to well-organized location; set'
      echo "$warn CSV2RDF4LOD_CONVERT_DATA_ROOT     $CSV2RDF4LOD_CONVERT_DATA_ROOT"
      echo "$warn CSV2RDF4LOD_PUBLISH_OUR_SOURCE_ID $CSV2RDF4LOD_PUBLISH_OUR_SOURCE_ID"
   fi
else
   echo "[WARNING]: could not log to well-organized location; set CSV2RDF4LOD_HOME"
fi

# Virtuoso can read from directories listed in 'DirsAllowed' 
# in /opt/virtuoso/var/lib/virtuoso/db/virtuoso.ini
if [ ! -d $virtuoso_allowed_dir ]; then

   echo "[INFO] (vdelete): mkdir -p $virtuoso_allowed_dir"
   mkdir -p $virtuoso_allowed_dir
   echo "[INFO] (vdelete): chmod a+w $virtuoso_allowed_dir"
   chmod a+w $virtuoso_allowed_dir

   # If we failed to do it as our own user...
   if [ ! -d $virtuoso_allowed_dir ]; then
      sudo mkdir -p $virtuoso_allowed_dir &> /dev/null
      sudo chmod a+w $virtuoso_allowed_dir &> /dev/null
   fi
fi

vdelete_log=$virtuoso_allowed_dir/delete_`${CSV2RDF4LOD_HOME}/bin/util/dateInXSDDateTime.sh coin:slug`_$$.log

# Call SPARQL CLEAR to delete named graphs
start=`${CSV2RDF4LOD_HOME}/bin/util/dateInXSDDateTime.sh`
sparql_delete="SPARQL CLEAR GRAPH <$graph_uri>;"
#echo ${isql_cmd} ${isql_pass}
#echo $sparql_delete
${isql_cmd} ${isql_pass} << EOF &> $vdelete_log
   log_enable(3,1);
   $sparql_delete
   exit;
EOF
# checkpoint; removed after $sparql_delete and before exit; above

echo ""                                                                                  >> $vdelete_log
echo "# start time: $start"                                                              >> $vdelete_log
echo "# user  name: $SUDO_USER as `whoami`"                                              >> $vdelete_log
echo "# log_enable(3,1);"                                                                >> $vdelete_log
echo "# sparql deleted: $sparql_delete"                                                  >> $vdelete_log
echo "# isql      : $isql"                                                               >> $vdelete_log
echo "# CSV2RDF4LOD_PUBLISH_VIRTUOSO_PORT: ${CSV2RDF4LOD_PUBLISH_VIRTUOSO_PORT:-"1111"}" >> $vdelete_log
echo "# end   time: `${CSV2RDF4LOD_HOME}/bin/util/dateInXSDDateTime.sh`"                 >> $vdelete_log

# Move the latest.log pointer to the log we just created.
rm $virtuoso_allowed_dir/latest.log &> /dev/null
ln -s $vdelete_log $virtuoso_allowed_dir/latest.log

echo "Deleting finished. Check $virtuoso_allowed_dir/latest.log for details"
echo "              (currently $vdelete_log)."

if [[ "$2" == "-v" || "$2" == "--verbose" ]]; then
   cat $vdelete_log
fi
